# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: node

stages:
  - lint
  - build
  - test
  - image
  - deploy

build:
  stage: build
  script:
    - cd packages/backend
    - npm i
  cache:
    paths:
      - packages/backend/node_modules/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - packages/backend/node_modules/

sast:
  stage: test
  needs: []
include:
  - template: Security/SAST.gitlab-ci.yml

eslint:
  stage: lint
  script:
    - cd packages/backend
    - npm install eslint eslint-config-airbnb-base
    - npm run lint
  cache:
    paths:
      - packages/backend/node_modules/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - packages/backend/node_modules/

test:
  stage: test
  needs:
    - "eslint"
    - "build"
  dependencies:
    - build
  script:
    - cd packages/backend
    - npm test

build:docker:
  stage: image
  needs:
    - test
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/packages/backend/ --dockerfile $CI_PROJECT_DIR/packages/backend/Dockerfile --destination $CI_REGISTRY_IMAGE/backend:latest
    - echo $CI_COMMIT_SHA > git-sha.txt

deploy:
  stage: deploy
  needs:
    - build:docker
  # only:
  #   refs:
  #     - main
  services: []
  image: alpine:latest
  script:
    - apk add --no-cache openssh
    - mkdir ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
    - chmod 600 ~/.ssh/private_key
    # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/private_key
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST $(cat git-sha.txt)
